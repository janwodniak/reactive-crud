[
  {
    "name": "[B"
  },
  {
    "name": "[C"
  },
  {
    "name": "[D"
  },
  {
    "name": "[F"
  },
  {
    "name": "[I"
  },
  {
    "name": "[J"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Box;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Circle;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Interval;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Line;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Lseg;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Path;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Point;"
  },
  {
    "name": "[Lio.r2dbc.postgresql.codec.Polygon;"
  },
  {
    "name": "[Ljava.io.Serializable;"
  },
  {
    "name": "[Ljava.lang.Boolean;"
  },
  {
    "name": "[Ljava.lang.Byte;"
  },
  {
    "name": "[Ljava.lang.CharSequence;"
  },
  {
    "name": "[Ljava.lang.Character;"
  },
  {
    "name": "[Ljava.lang.Class;"
  },
  {
    "name": "[Ljava.lang.Comparable;"
  },
  {
    "name": "[Ljava.lang.Double;"
  },
  {
    "name": "[Ljava.lang.Float;"
  },
  {
    "name": "[Ljava.lang.Integer;"
  },
  {
    "name": "[Ljava.lang.Long;"
  },
  {
    "name": "[Ljava.lang.Object;"
  },
  {
    "name": "[Ljava.lang.Short;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.lang.annotation.Annotation;"
  },
  {
    "name": "[Ljava.lang.constant.Constable;"
  },
  {
    "name": "[Ljava.lang.constant.ConstantDesc;"
  },
  {
    "name": "[Ljava.math.BigDecimal;"
  },
  {
    "name": "[Ljava.math.BigInteger;"
  },
  {
    "name": "[Ljava.net.InetAddress;"
  },
  {
    "name": "[Ljava.net.URI;"
  },
  {
    "name": "[Ljava.net.URL;"
  },
  {
    "name": "[Ljava.nio.ByteBuffer;"
  },
  {
    "name": "[Ljava.rmi.server.ObjID;"
  },
  {
    "name": "[Ljava.time.Instant;"
  },
  {
    "name": "[Ljava.time.LocalDate;"
  },
  {
    "name": "[Ljava.time.LocalDateTime;"
  },
  {
    "name": "[Ljava.time.LocalTime;"
  },
  {
    "name": "[Ljava.time.OffsetDateTime;"
  },
  {
    "name": "[Ljava.time.OffsetTime;"
  },
  {
    "name": "[Ljava.time.ZoneId;"
  },
  {
    "name": "[Ljava.time.ZonedDateTime;"
  },
  {
    "name": "[Ljava.util.Date;"
  },
  {
    "name": "[Ljava.util.UUID;"
  },
  {
    "name": "[Ljavax.management.openmbean.CompositeData;"
  },
  {
    "name": "[Lorg.springframework.boot.context.config.ConfigDataLocation;"
  },
  {
    "name": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
  },
  {
    "name": "[Lorg.springframework.core.io.InputStreamSource;"
  },
  {
    "name": "[Lorg.springframework.core.io.Resource;",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "[Lorg.springframework.data.domain.Sort$Order;"
  },
  {
    "name": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
  },
  {
    "name": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
  },
  {
    "name": "[S"
  },
  {
    "name": "[Z"
  },
  {
    "name": "[[B"
  },
  {
    "name": "boolean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "ch.qos.logback.classic.BasicConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.annotation.JacksonAnnotation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonFormat",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator"
  },
  {
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getJsonFactory",
        "parameterTypes": []
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.Module",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDependencies",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createArrayNode",
        "parameterTypes": []
      },
      {
        "name": "createObjectNode",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "missingNode",
        "parameterTypes": []
      },
      {
        "name": "nullNode",
        "parameterTypes": []
      },
      {
        "name": "readTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addAbstractTypeMapping",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "addDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "addKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.KeyDeserializer"
        ]
      },
      {
        "name": "addKeySerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addValueInstantiator",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getTypeId",
        "parameterTypes": []
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsontype.NamedType[]"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "setAbstractTypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
        ]
      },
      {
        "name": "setDeserializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
        ]
      },
      {
        "name": "setDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleDeserializers"
        ]
      },
      {
        "name": "setKeyDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
        ]
      },
      {
        "name": "setKeySerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setMixInAnnotation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "setSerializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
        ]
      },
      {
        "name": "setSerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setValueInstantiators",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
        ]
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      }
    ]
  },
  {
    "name": "com.intellij.rt.execution.application.AppMainV2$Agent",
    "methods": [
      {
        "name": "premain",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.instrument.Instrumentation"
        ]
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBKDF2Core$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.jmx.mbeanserver.JmxMBeanServer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.NotificationListener",
          "javax.management.NotificationFilter",
          "java.lang.Object"
        ]
      },
      {
        "name": "addNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "javax.management.NotificationFilter",
          "java.lang.Object"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "java.lang.Object[]",
          "java.lang.String[]"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "java.lang.Object[]",
          "java.lang.String[]"
        ]
      },
      {
        "name": "deserialize",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "byte[]"
        ]
      },
      {
        "name": "deserialize",
        "parameterTypes": [
          "java.lang.String",
          "byte[]"
        ]
      },
      {
        "name": "deserialize",
        "parameterTypes": [
          "javax.management.ObjectName",
          "byte[]"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String[]"
        ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": [
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "getClassLoaderFor",
        "parameterTypes": [
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "getClassLoaderRepository",
        "parameterTypes": []
      },
      {
        "name": "getDefaultDomain",
        "parameterTypes": []
      },
      {
        "name": "getDomains",
        "parameterTypes": []
      },
      {
        "name": "getMBeanCount",
        "parameterTypes": []
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": [
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "getMBeanInstantiator",
        "parameterTypes": []
      },
      {
        "name": "getMBeanServerDelegate",
        "parameterTypes": []
      },
      {
        "name": "getMBeanServerInterceptor",
        "parameterTypes": []
      },
      {
        "name": "getObjectInstance",
        "parameterTypes": [
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "instantiate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "instantiate",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "instantiate",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "java.lang.Object[]",
          "java.lang.String[]"
        ]
      },
      {
        "name": "instantiate",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.String[]"
        ]
      },
      {
        "name": "interceptorsEnabled",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.String[]"
        ]
      },
      {
        "name": "isInstanceOf",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String"
        ]
      },
      {
        "name": "isRegistered",
        "parameterTypes": [
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "queryMBeans",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.QueryExp"
        ]
      },
      {
        "name": "queryNames",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.QueryExp"
        ]
      },
      {
        "name": "registerMBean",
        "parameterTypes": [
          "java.lang.Object",
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "removeNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.NotificationListener"
        ]
      },
      {
        "name": "removeNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.NotificationListener",
          "javax.management.NotificationFilter",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "removeNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "javax.management.NotificationFilter",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.Attribute"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.AttributeList"
        ]
      },
      {
        "name": "setMBeanServerInterceptor",
        "parameterTypes": [
          "javax.management.MBeanServer"
        ]
      },
      {
        "name": "unregisterMBean",
        "parameterTypes": [
          "javax.management.ObjectName"
        ]
      }
    ]
  },
  {
    "name": "com.sun.jmx.mbeanserver.SunJmxMBeanServer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.GarbageCollectorMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.GcInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.HotSpotDiagnosticMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.ThreadMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.UnixOperatingSystemMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.VMOption",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sun.management.internal.GarbageCollectorExtImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotDiagnostic",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.HotSpotThreadImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.management.internal.OperatingSystemImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.ReactiveCrudApplication",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "main",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.ReactiveCrudApplication$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.DataConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.DataConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.ModelMapperConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "modelMapper",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.ModelMapperConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "modelMapper",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.ModelMapperConfiguration$$SpringCGLIB$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.ModelMapperConfiguration$$SpringCGLIB$$2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.TimeConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clock",
        "parameterTypes": []
      },
      {
        "name": "dateTimeProvider",
        "parameterTypes": [
          "java.time.Clock"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.TimeConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "clock",
        "parameterTypes": []
      },
      {
        "name": "dateTimeProvider",
        "parameterTypes": [
          "java.time.Clock"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.TimeConfiguration$$SpringCGLIB$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.TimeConfiguration$$SpringCGLIB$$2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.hint.LiquibaseRuntimeHintsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.hint.LiquibaseRuntimeHintsConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.hint.LiquibaseRuntimeHintsConfiguration$LiquibaseRuntimeHints"
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.hint.PropertiesRuntimeHintsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.hint.PropertiesRuntimeHintsConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.configuration.hint.PropertiesRuntimeHintsConfiguration$PropertiesRuntimeHints"
  },
  {
    "name": "dev.janwodniak.reactivecrud.controlller.NoteController",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "dev.janwodniak.reactivecrud.service.ReactiveNoteService",
          "org.modelmapper.ModelMapper"
        ]
      },
      {
        "name": "getNoteById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "searchNotes",
        "parameterTypes": [
          "java.util.Optional",
          "dev.janwodniak.reactivecrud.model.note.command.CreateNotePageCommand"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.exception.custom.ValidationErrorDto",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "field",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.exception.handling.ExceptionHandling",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.time.Clock"
        ]
      },
      {
        "name": "handleMethodArgumentNotValidException",
        "parameterTypes": [
          "org.springframework.web.bind.support.WebExchangeBindException"
        ]
      },
      {
        "name": "handleNoteNotFoundException",
        "parameterTypes": [
          "dev.janwodniak.reactivecrud.exception.custom.NoteNotFoundException"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.initializer.DataInitializer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "dev.janwodniak.reactivecrud.repository.NoteRepository",
          "dev.janwodniak.reactivecrud.initializer.DataInitializerProperties",
          "org.springframework.transaction.reactive.TransactionalOperator"
        ]
      },
      {
        "name": "cleanup",
        "parameterTypes": []
      },
      {
        "name": "initializeData",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.initializer.DataInitializerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.Integer"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.model.http.HttpResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "httpStatus",
        "parameterTypes": []
      },
      {
        "name": "httpStatusCode",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "reason",
        "parameterTypes": []
      },
      {
        "name": "timestamp",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.model.note.Note",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "dev.janwodniak.reactivecrud.model.note.Note_Accessor_95tu4c",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "dev.janwodniak.reactivecrud.model.note.Note"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.model.note.Note_Instantiator_95tu4c",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.model.note.command.CreateNotePageCommand",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPageNumber",
        "parameterTypes": []
      },
      {
        "name": "getPageSize",
        "parameterTypes": []
      },
      {
        "name": "getSortBy",
        "parameterTypes": []
      },
      {
        "name": "getSortDirection",
        "parameterTypes": []
      },
      {
        "name": "setPageNumber",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSortBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortDirection",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.model.note.converter.CreateNoteCommandToNoteConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convert",
        "parameterTypes": [
          "org.modelmapper.spi.MappingContext"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.model.note.converter.CreateNotePageCommandToPageableConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convert",
        "parameterTypes": [
          "org.modelmapper.spi.MappingContext"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.model.note.converter.NoteToNoteDtoConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "convert",
        "parameterTypes": [
          "org.modelmapper.spi.MappingContext"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.model.note.dto.NoteDto",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "content",
        "parameterTypes": []
      },
      {
        "name": "date",
        "parameterTypes": []
      },
      {
        "name": "id",
        "parameterTypes": []
      },
      {
        "name": "title",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.repository.NoteRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "countByTitleContainingIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTitleContainingIgnoreCase",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.data.domain.Pageable"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.service.ReactiveNoteService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "dev.janwodniak.reactivecrud.service.implementation.DefaultNoteService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "dev.janwodniak.reactivecrud.repository.NoteRepository"
        ]
      },
      {
        "name": "createNote",
        "parameterTypes": [
          "dev.janwodniak.reactivecrud.model.note.Note"
        ]
      },
      {
        "name": "deleteNote",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "editNote",
        "parameterTypes": [
          "java.lang.Long",
          "dev.janwodniak.reactivecrud.model.note.command.EditNoteCommand"
        ]
      },
      {
        "name": "editNotePartially",
        "parameterTypes": [
          "java.lang.Long",
          "dev.janwodniak.reactivecrud.model.note.command.EditNotePartiallyCommand"
        ]
      },
      {
        "name": "getNoteById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "searchNotes",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.data.domain.Pageable"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.service.implementation.DefaultNoteService$$SpringCGLIB$$0"
  },
  {
    "name": "dev.janwodniak.reactivecrud.validation.annotation.ClassFields",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "excludedFieldsNames",
        "parameterTypes": []
      },
      {
        "name": "fieldsSource",
        "parameterTypes": []
      },
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.validation.annotation.ValueOfEnum",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "enumClass",
        "parameterTypes": []
      },
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.validation.validator.ClassFieldsValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": [
          "java.lang.annotation.Annotation"
        ]
      },
      {
        "name": "isValid",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.validation.ConstraintValidatorContext"
        ]
      }
    ]
  },
  {
    "name": "dev.janwodniak.reactivecrud.validation.validator.ValueOfEnumValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "initialize",
        "parameterTypes": [
          "java.lang.annotation.Annotation"
        ]
      },
      {
        "name": "isValid",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.validation.ConstraintValidatorContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.netty.buffer.ByteBuf"
  },
  {
    "name": "io.netty.buffer.PooledByteBufAllocator"
  },
  {
    "name": "io.netty.channel.AbstractChannelHandlerContext"
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.CombinedChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext"
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline"
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultFileRegion"
  },
  {
    "name": "io.netty.channel.epoll.Epoll"
  },
  {
    "name": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
  },
  {
    "name": "io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe"
  },
  {
    "name": "io.netty.channel.nio.NioEventLoop"
  },
  {
    "name": "io.netty.channel.unix.PeerCredentials"
  },
  {
    "name": "io.netty.handler.codec.ByteToMessageDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.LengthFieldBasedFrameDecoder"
  },
  {
    "name": "io.netty.handler.codec.http.HttpServerCodec"
  },
  {
    "name": "io.netty.util.AbstractReferenceCounted",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.netty.util.NettyRuntime"
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.util.concurrent.FastThreadLocalRunnable"
  },
  {
    "name": "io.netty.util.concurrent.SingleThreadEventExecutor$4"
  },
  {
    "name": "io.netty.util.internal.ThreadExecutorMap$2"
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.r2dbc.pool.ConnectionPool",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "create",
        "parameterTypes": []
      },
      {
        "name": "dispose",
        "parameterTypes": []
      },
      {
        "name": "getMetadata",
        "parameterTypes": []
      },
      {
        "name": "isDisposed",
        "parameterTypes": []
      },
      {
        "name": "unwrap",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.r2dbc.postgresql.client.ReactorNettyClient$EnsureSubscribersCompleteChannelHandler",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.r2dbc.postgresql.codec.Box"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Circle"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Interval"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Json"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Line"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Lseg"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Path"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Point"
  },
  {
    "name": "io.r2dbc.postgresql.codec.Polygon"
  },
  {
    "name": "io.r2dbc.spi.Closeable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.r2dbc.spi.Connection",
    "methods": [
      {
        "name": "createStatement",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "io.r2dbc.spi.ConnectionFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.r2dbc.spi.ConnectionFactoryOptions"
  },
  {
    "name": "io.r2dbc.spi.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.r2dbc.spi.Wrapped",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "jakarta.annotation.ManagedBean"
  },
  {
    "name": "jakarta.annotation.PostConstruct",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.annotation.PreDestroy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.annotation.Resource"
  },
  {
    "name": "jakarta.validation.Constraint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.ConstraintValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "java.lang.annotation.Annotation"
        ]
      }
    ]
  },
  {
    "name": "jakarta.validation.ConstraintValidatorContext"
  },
  {
    "name": "jakarta.validation.Valid",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.ValidatorFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.validation.bootstrap.GenericBootstrap"
  },
  {
    "name": "jakarta.validation.constraints.Min",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "groups",
        "parameterTypes": []
      },
      {
        "name": "message",
        "parameterTypes": []
      },
      {
        "name": "payload",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jakarta.validation.constraints.NotNull",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.constraints.Pattern",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.constraints.Size",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.validation.executable.ExecutableValidator"
  },
  {
    "name": "java.beans.PropertyVetoException"
  },
  {
    "name": "java.io.Closeable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.FileDescriptor"
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.AutoCloseable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Boolean",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Byte",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.CharSequence"
  },
  {
    "name": "java.lang.Character",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Class",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getRecordComponents",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.ClassLoader",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "int",
          "int",
          "java.security.ProtectionDomain"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Cloneable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Comparable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Deprecated",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Double",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Enum"
  },
  {
    "name": "java.lang.Float",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.IllegalArgumentException"
  },
  {
    "name": "java.lang.IllegalStateException"
  },
  {
    "name": "java.lang.Integer",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Iterable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Long",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Module",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isNamed",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.ProcessHandle",
    "methods": [
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "pid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Record",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Runnable"
  },
  {
    "name": "java.lang.RuntimeException"
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.SecurityManager",
    "methods": [
      {
        "name": "checkPermission",
        "parameterTypes": [
          "java.security.Permission"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Short",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.StackTraceElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.String",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.System",
    "methods": [
      {
        "name": "getSecurityManager",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.System$2",
    "methods": [
      {
        "name": "getConstantPool",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Thread"
  },
  {
    "name": "java.lang.ThreadLocal"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true
  },
  {
    "name": "java.lang.UnsupportedOperationException"
  },
  {
    "name": "java.lang.Void",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.annotation.Annotation"
  },
  {
    "name": "java.lang.annotation.Documented",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Inherited",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Repeatable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Retention",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Target",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.invoke.LambdaMetafactory"
  },
  {
    "name": "java.lang.invoke.MethodHandle"
  },
  {
    "name": "java.lang.invoke.MethodHandles"
  },
  {
    "name": "java.lang.invoke.MethodHandles$Lookup",
    "fields": [
      {
        "name": "IMPL_LOOKUP"
      }
    ]
  },
  {
    "name": "java.lang.invoke.TypeDescriptor$OfField",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.BufferPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ClassLoadingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.CompilationMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.LockInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.ManagementPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.MemoryMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryManagerMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryPoolMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryUsage",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MonitorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.PlatformLoggingMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLoggerLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoggerNames",
        "parameterTypes": []
      },
      {
        "name": "getParentLoggerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoggerLevel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.AccessibleObject",
    "fields": [
      {
        "name": "override"
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.Field"
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.InvocationTargetException"
  },
  {
    "name": "java.lang.reflect.ParameterizedType",
    "methods": [
      {
        "name": "getActualTypeArguments",
        "parameterTypes": []
      },
      {
        "name": "getRawType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.RecordComponent",
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Type",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.TypeVariable",
    "methods": [
      {
        "name": "getBounds",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.WildcardType",
    "methods": [
      {
        "name": "getLowerBounds",
        "parameterTypes": []
      },
      {
        "name": "getUpperBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.math.BigDecimal"
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URLClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.net.http.HttpClient"
  },
  {
    "name": "java.nio.Bits",
    "fields": [
      {
        "name": "UNALIGNED"
      }
    ]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address"
      }
    ]
  },
  {
    "name": "java.nio.ByteBuffer",
    "methods": [
      {
        "name": "alignedSlice",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.channels.FileChannel"
  },
  {
    "name": "java.nio.channels.spi.SelectorProvider",
    "methods": [
      {
        "name": "openServerSocketChannel",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      },
      {
        "name": "openSocketChannel",
        "parameterTypes": [
          "java.net.ProtocolFamily"
        ]
      }
    ]
  },
  {
    "name": "java.rmi.MarshalledObject"
  },
  {
    "name": "java.rmi.dgc.Lease"
  },
  {
    "name": "java.rmi.dgc.VMID"
  },
  {
    "name": "java.rmi.server.ObjID"
  },
  {
    "name": "java.rmi.server.UID"
  },
  {
    "name": "java.security.AccessController",
    "methods": [
      {
        "name": "doPrivileged",
        "parameterTypes": [
          "java.security.PrivilegedExceptionAction"
        ]
      }
    ]
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.SecureClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.time.Clock"
  },
  {
    "name": "java.time.Duration"
  },
  {
    "name": "java.time.LocalDateTime",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.time.OffsetDateTime",
    "methods": [
      {
        "name": "toLocalDateTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.Arrays"
  },
  {
    "name": "java.util.Date",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "java.util.EventListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.List"
  },
  {
    "name": "java.util.Objects"
  },
  {
    "name": "java.util.Optional"
  },
  {
    "name": "java.util.PropertyPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "java.util.concurrent.Executor"
  },
  {
    "name": "java.util.function.Consumer"
  },
  {
    "name": "java.util.function.Function"
  },
  {
    "name": "java.util.function.Predicate"
  },
  {
    "name": "java.util.function.Supplier",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.function.UnaryOperator"
  },
  {
    "name": "java.util.logging.LogManager",
    "methods": [
      {
        "name": "getLoggingMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.logging.LoggingMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.regex.Matcher"
  },
  {
    "name": "java.util.regex.Pattern"
  },
  {
    "name": "java.util.stream.Collectors"
  },
  {
    "name": "java.util.stream.Stream"
  },
  {
    "name": "javax.management.MBeanOperationInfo",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getSignature",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.MBeanServer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.management.MBeanServerBuilder",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.management.MBeanServerConnection",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.management.openmbean.CompositeData"
  },
  {
    "name": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
  },
  {
    "name": "javax.management.openmbean.TabularData"
  },
  {
    "name": "javax.management.remote.rmi.RMIConnection",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "addNotificationListeners",
        "parameterTypes": [
          "javax.management.ObjectName[]",
          "java.rmi.MarshalledObject[]",
          "javax.security.auth.Subject[]"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "createMBean",
        "parameterTypes": [
          "java.lang.String",
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "fetchNotifications",
        "parameterTypes": [
          "long",
          "int",
          "long"
        ]
      },
      {
        "name": "getAttribute",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getAttributes",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getConnectionId",
        "parameterTypes": []
      },
      {
        "name": "getDefaultDomain",
        "parameterTypes": [
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getDomains",
        "parameterTypes": [
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getMBeanCount",
        "parameterTypes": [
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getMBeanInfo",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "getObjectInstance",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String",
          "java.rmi.MarshalledObject",
          "java.lang.String[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "isInstanceOf",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.String",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "isRegistered",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "queryMBeans",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "queryNames",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "removeNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "removeNotificationListener",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "removeNotificationListeners",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.lang.Integer[]",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "setAttributes",
        "parameterTypes": [
          "javax.management.ObjectName",
          "java.rmi.MarshalledObject",
          "javax.security.auth.Subject"
        ]
      },
      {
        "name": "unregisterMBean",
        "parameterTypes": [
          "javax.management.ObjectName",
          "javax.security.auth.Subject"
        ]
      }
    ]
  },
  {
    "name": "javax.management.remote.rmi.RMIConnectionImpl_Stub",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.rmi.server.RemoteRef"
        ]
      }
    ]
  },
  {
    "name": "javax.management.remote.rmi.RMIServer",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newClient",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "javax.management.remote.rmi.RMIServerImpl_Stub",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.rmi.server.RemoteRef"
        ]
      }
    ]
  },
  {
    "name": "javax.naming.InitialContext"
  },
  {
    "name": "javax.naming.ldap.LdapContext"
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.internal.access.SharedSecrets",
    "methods": [
      {
        "name": "getJavaLangAccess",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.reflect.ConstantPool",
    "methods": [
      {
        "name": "getMethodAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.reflect.ConstructorAccessorImpl"
  },
  {
    "name": "jdk.internal.reflect.MethodAccessorImpl"
  },
  {
    "name": "jdk.internal.reflect.SerializationConstructorAccessorImpl"
  },
  {
    "name": "jdk.management.jfr.ConfigurationInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.EventTypeInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.FlightRecorderMXBeanImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "jdk.management.jfr.RecordingInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "jdk.management.jfr.SettingDescriptorInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.AbstractExtensibleObject",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.AbstractChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.change.AbstractSQLChange",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isSplitStatements",
        "parameterTypes": []
      },
      {
        "name": "isStripComments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.ChangeFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.change.DatabaseChange"
  },
  {
    "name": "liquibase.change.core.RawSQLChange",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.changelog.StandardChangeLogHistoryService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.configuration.ConfiguredValueModifierFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.configuration.LiquibaseConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.database.core.PostgresDatabase",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.BooleanType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.ClobType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DateTimeType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DoubleDataTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.DoubleType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.IntType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TextDataTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.TimestampNTZTypeSnowflake",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.datatype.core.VarcharType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.executor.ExecutorService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.executor.jvm.JdbcExecutor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.hub.HubServiceFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.integration.spring.SpringLiquibase",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getChangeLog",
        "parameterTypes": []
      },
      {
        "name": "getContexts",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseChangeLogLockTable",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseChangeLogTable",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseProductName",
        "parameterTypes": []
      },
      {
        "name": "getDefaultSchema",
        "parameterTypes": []
      },
      {
        "name": "getLabelFilter",
        "parameterTypes": []
      },
      {
        "name": "getLabels",
        "parameterTypes": []
      },
      {
        "name": "getLiquibaseSchema",
        "parameterTypes": []
      },
      {
        "name": "getLiquibaseTablespace",
        "parameterTypes": []
      },
      {
        "name": "getResourceLoader",
        "parameterTypes": []
      },
      {
        "name": "getTag",
        "parameterTypes": []
      },
      {
        "name": "isClearCheckSums",
        "parameterTypes": []
      },
      {
        "name": "isDropFirst",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreClasspathPrefix",
        "parameterTypes": []
      },
      {
        "name": "isTestRollbackOnUpdate",
        "parameterTypes": []
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setChangeLog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setChangeLogParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setClearCheckSums",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setContexts",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDatabaseChangeLogLockTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDatabaseChangeLogTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropFirst",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnoreClasspathPrefix",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabelFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLabels",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLiquibaseSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLiquibaseTablespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setRollbackFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setShouldRun",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestRollbackOnUpdate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.lockservice.StandardLockService",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.logging.core.LogServiceFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.logging.mdc.MdcManagerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.plugin.AbstractPlugin",
    "queryAllPublicMethods": true
  },
  {
    "name": "liquibase.sql.visitor.AppendSqlVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.sql.visitor.PrependSqlVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.sql.visitor.RegExpReplaceSqlVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "liquibase.sql.visitor.ReplaceSqlVisitor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.commons.lang3.RandomStringUtils"
  },
  {
    "name": "org.apache.el.ExpressionFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.spi.ExtendedLogger"
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JProvider"
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.AbstractMinValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "compare",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": [
          "jakarta.validation.constraints.Min"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": [
          "java.lang.annotation.Annotation"
        ]
      },
      {
        "name": "isValid",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.validation.ConstraintValidatorContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForInteger",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
    "methods": [
      {
        "name": "externalClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.engine.ConfigurationImpl"
  },
  {
    "name": "org.hibernate.validator.internal.engine.ValidatorImpl"
  },
  {
    "name": "org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree"
  },
  {
    "name": "org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree"
  },
  {
    "name": "org.hibernate.validator.internal.metadata.core.MetaConstraint"
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "org.jboss.logging.Logger"
  },
  {
    "name": "org.modelmapper.Converter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.modelmapper.ModelMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.modelmapper.spi.MappingContext"
  },
  {
    "name": "org.postgresql.Driver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.slf4j.Logger"
  },
  {
    "name": "org.slf4j.LoggerFactory"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.Advisor",
    "methods": [
      {
        "name": "isPerInstance",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.SpringProxy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.TargetClassAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getTargetClass",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "determineBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeforeExistingAdvisors",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.Advised",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isFrozen",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "copyFrom",
        "parameterTypes": [
          "org.springframework.aop.framework.ProxyConfig"
        ]
      },
      {
        "name": "isExposeProxy",
        "parameterTypes": []
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "isOpaque",
        "parameterTypes": []
      },
      {
        "name": "isOptimize",
        "parameterTypes": []
      },
      {
        "name": "isProxyTargetClass",
        "parameterTypes": []
      },
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFrozen",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOpaque",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptimize",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setProxyClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "determineBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "determineCandidateConstructors",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "getEarlyBeanReference",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "isFrozen",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInstantiation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessProperties",
        "parameterTypes": [
          "org.springframework.beans.PropertyValues",
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "predictBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "setAdvisorAdapterRegistry",
        "parameterTypes": [
          "org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"
        ]
      },
      {
        "name": "setApplyCommonInterceptorsFirst",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomTargetSourceCreators",
        "parameterTypes": [
          "org.springframework.aop.framework.autoproxy.TargetSourceCreator[]"
        ]
      },
      {
        "name": "setFrozen",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInterceptorNames",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.scope.ScopedObject"
  },
  {
    "name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getAdviceBeanName",
        "parameterTypes": []
      },
      {
        "name": "setAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "setAdviceBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aot.hint.annotation.Reflective",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.CachedIntrospectionResults",
    "fields": [
      {
        "name": "acceptedClassLoaders"
      },
      {
        "name": "softClassCache"
      },
      {
        "name": "strongClassCache"
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.ObjectFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "isBeanExcludedFromAotProcessing",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.AbstractFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setSingleton",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInstantiation",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInstantiation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessProperties",
        "parameterTypes": [
          "org.springframework.beans.PropertyValues",
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setTargetBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean$TargetBeanObjectFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getObject",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "determineCandidateConstructors",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "getEarlyBeanReference",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "predictBeanType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.NullBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
    "allPublicFields": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.admin.SpringApplicationAdminMXBean",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isReady",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "org.springframework.core.ResolvableType"
        ]
      },
      {
        "name": "supportsSourceType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "springApplicationAdminRegistrar",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "forceAutoProxyCreatorToUseClassProxying",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.codec.CodecProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.r2dbc.core.DatabaseClient"
        ]
      },
      {
        "name": "r2dbcConverter",
        "parameterTypes": [
          "org.springframework.data.r2dbc.mapping.R2dbcMappingContext",
          "org.springframework.data.r2dbc.convert.R2dbcCustomConversions"
        ]
      },
      {
        "name": "r2dbcCustomConversions",
        "parameterTypes": []
      },
      {
        "name": "r2dbcEntityTemplate",
        "parameterTypes": [
          "org.springframework.data.r2dbc.convert.R2dbcConverter"
        ]
      },
      {
        "name": "r2dbcManagedTypes",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "r2dbcMappingContext",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.data.r2dbc.convert.R2dbcCustomConversions",
          "org.springframework.data.relational.RelationalManagedTypes"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfigureRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultCodecCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.codec.CodecProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonCodecCustomizer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      },
      {
        "name": "jsonMixinModuleEntries",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getXaDataSourceClassName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jmx.JmxProperties"
        ]
      },
      {
        "name": "mbeanExporter",
        "parameterTypes": [
          "org.springframework.jmx.export.naming.ObjectNamingStrategy",
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "mbeanServer",
        "parameterTypes": []
      },
      {
        "name": "objectNamingStrategy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jmx.JmxProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getObjectName",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "liquibaseDefaultDdlModeProvider",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$LiquibaseAutoConfigurationRuntimeHints"
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$LiquibaseConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "liquibase",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties",
          "org.springframework.boot.autoconfigure.liquibase.LiquibaseConnectionDetails"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration$LiquibaseDataSourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseDataSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setChangeLog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.liquibase.LiquibaseSchemaManagementProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getSchemaManagement",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$GenericConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "connectionFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PooledConnectionFactoryCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryDependentConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "r2dbcDatabaseClient",
        "parameterTypes": [
          "io.r2dbc.spi.ConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "connectionFactoryTransactionManager",
        "parameterTypes": [
          "io.r2dbc.spi.ConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactorResourceFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setShutdownQuietPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "sslBundleRegistry",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "sslPropertiesSslBundleRegistrar",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "registerBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundleRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "transactionalOperator",
        "parameterTypes": [
          "org.springframework.transaction.ReactiveTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultValidator",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "methodValidationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getServlet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getJsp",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getChain",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "nettyWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "httpHandler",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "defaultPartHttpMessageReaderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "nettyReactiveWebServerFactory",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.boot.web.server.WebServerFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "localeContextResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxConversionService",
        "parameterTypes": []
      },
      {
        "name": "webFluxValidator",
        "parameterTypes": []
      },
      {
        "name": "webSessionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "configureArgumentResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
        ]
      },
      {
        "name": "configureHttpMessageCodecs",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ViewResolverRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "welcomePageRouterFunctionMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
        ]
      },
      {
        "name": "webSessionIdResolver",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setMessageReaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMessageWriters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setViewResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": []
      },
      {
        "name": "errorWebExceptionHandler",
        "parameterTypes": [
          "org.springframework.boot.web.reactive.error.ErrorAttributes",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "fromBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromBundle",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundle"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "createClientHttpConnector",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$HttpClient5"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JdkClient"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JettyClient"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactorClientHttpConnectorFactory",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ReactorClientHttpConnectorFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createClientHttpConnector",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundle"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "webClientSsl",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "exchangeStrategiesCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.web.reactive.function.client.WebClient$Builder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getLivenessState",
        "parameterTypes": []
      },
      {
        "name": "getReadinessState",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastChangeEvent",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.boot.availability.AvailabilityState"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.TypeExcludeFilter",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.ConfigurableBootstrapContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.context.properties.bind.Binder",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesScan",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.NestedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Nested",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.convert.DurationUnit",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.DevToolsProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.DevToolsR2dbcAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "inMemoryR2dbcDatabaseShutdownExecutor",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher",
          "io.r2dbc.spi.ConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.DevToolsR2dbcAutoConfiguration$DevToolsConnectionFactoryCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.DevToolsR2dbcAutoConfiguration$InMemoryR2dbcDatabaseShutdownExecutor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "liveReloadServer",
        "parameterTypes": [
          "org.springframework.boot.devtools.autoconfigure.DevToolsProperties"
        ]
      },
      {
        "name": "liveReloadServerEventListener",
        "parameterTypes": [
          "org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer"
        ]
      },
      {
        "name": "optionalLiveReloadServer",
        "parameterTypes": [
          "org.springframework.boot.devtools.livereload.LiveReloadServer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadServerEventListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "org.springframework.core.ResolvableType"
        ]
      },
      {
        "name": "supportsSourceType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.devtools.autoconfigure.DevToolsProperties"
        ]
      },
      {
        "name": "classPathFileSystemWatcher",
        "parameterTypes": [
          "org.springframework.boot.devtools.filewatch.FileSystemWatcherFactory",
          "org.springframework.boot.devtools.classpath.ClassPathRestartStrategy"
        ]
      },
      {
        "name": "classPathRestartStrategy",
        "parameterTypes": []
      },
      {
        "name": "conditionEvaluationDeltaLoggingListener",
        "parameterTypes": []
      },
      {
        "name": "fileSystemWatcherFactory",
        "parameterTypes": []
      },
      {
        "name": "restartingClassPathChangedEventListener",
        "parameterTypes": [
          "org.springframework.boot.devtools.filewatch.FileSystemWatcherFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.OnEnabledDevToolsCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.classpath.ClassPathRestartStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.devtools.classpath.PatternClassPathRestartStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isRestartRequired",
        "parameterTypes": [
          "org.springframework.boot.devtools.filewatch.ChangedFile"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.env.DevToolsHomePropertiesPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.filewatch.FileSystemWatcherFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.devtools.livereload.LiveReloadServer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.devtools.logger.DevToolsLogFactory$Listener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.restart.ConditionalOnInitializedRestarter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.devtools.restart.OnInitializedRestarterCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.restart.RestartApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.restart.RestartScope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.devtools.restart.RestartScopeInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.devtools.restart.classloader.RestartClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliComposeConfigResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliComposeConfigResponse$Service",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliComposePsResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliComposeVersionResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliContextResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$Config",
          "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$NetworkSettings",
          "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$HostConfig"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$Config",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.util.Map",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$ExposedPort",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$HostConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$HostPort",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.core.DockerCliInspectResponse$NetworkSettings",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.lifecycle.DockerComposeListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.lifecycle.DockerComposeProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getReadiness",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.lifecycle.DockerComposeProperties$Readiness",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setWait",
        "parameterTypes": [
          "org.springframework.boot.docker.compose.lifecycle.DockerComposeProperties$Readiness$Wait"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.DockerComposeConnectionDetailsFactory$DockerComposeConnectionDetails",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrigin",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.DockerComposeServiceConnectionsApplicationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.cassandra.CassandraDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.elasticsearch.ElasticsearchDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.flyway.JdbcAdaptingFlywayConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.flyway.JdbcAdaptingFlywayConnectionDetailsFactory$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.liquibase.JdbcAdaptingLiquibaseConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.liquibase.JdbcAdaptingLiquibaseConnectionDetailsFactory$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.mariadb.MariaDbJdbcDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.mariadb.MariaDbR2dbcDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.mongo.MongoDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.mysql.MySqlJdbcDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.mysql.MySqlR2dbcDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.oracle.OracleJdbcDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.oracle.OracleR2dbcDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.postgres.PostgresJdbcDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.postgres.PostgresJdbcDockerComposeConnectionDetailsFactory$PostgresJdbcDockerComposeConnectionDetails",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.postgres.PostgresR2dbcDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.postgres.PostgresR2dbcDockerComposeConnectionDetailsFactory$PostgresDbR2dbcDockerComposeConnectionDetails",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getConnectionFactoryOptions",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.rabbit.RabbitDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.redis.RedisDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.sqlserver.SqlServerJdbcDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.sqlserver.SqlServerR2dbcDockerComposeConnectionDetailsFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.docker.compose.service.connection.zipkin.ZipkinDockerComposeConnectionDetailsFactory",
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SchemaManagementProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.origin.OriginProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerBundle",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.ssl.SslBundle"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.codec.CodecCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "getWebServer",
        "parameterTypes": [
          "org.springframework.http.server.reactive.HttpHandler"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ConfigurableReactiveWebEnvironment"
  },
  {
    "name": "org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getError",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.ServerRequest"
        ]
      },
      {
        "name": "getErrorAttributes",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.ServerRequest",
          "org.springframework.boot.web.error.ErrorAttributeOptions"
        ]
      },
      {
        "name": "storeErrorInformation",
        "parameterTypes": [
          "java.lang.Throwable",
          "org.springframework.web.server.ServerWebExchange"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorAttributes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPage[]"
        ]
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getErrorPages",
        "parameterTypes": []
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getSslStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setCompression",
        "parameterTypes": [
          "org.springframework.boot.web.server.Compression"
        ]
      },
      {
        "name": "setErrorPages",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "org.springframework.boot.web.server.Http2"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setSslBundles",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundles"
        ]
      },
      {
        "name": "setSslStoreProvider",
        "parameterTypes": [
          "org.springframework.boot.web.server.SslStoreProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getInitParameters",
        "parameterTypes": []
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cache.Cache"
  },
  {
    "name": "org.springframework.cache.CacheManager"
  },
  {
    "name": "org.springframework.cache.interceptor.CacheAspectSupport"
  },
  {
    "name": "org.springframework.cglib.core.ClassNameReader",
    "fields": [
      {
        "name": "EARLY_EXIT"
      }
    ]
  },
  {
    "name": "org.springframework.cglib.core.ReflectUtils"
  },
  {
    "name": "org.springframework.cglib.proxy.Dispatcher"
  },
  {
    "name": "org.springframework.cglib.proxy.Factory"
  },
  {
    "name": "org.springframework.cglib.proxy.MethodInterceptor"
  },
  {
    "name": "org.springframework.cglib.proxy.MethodProxy"
  },
  {
    "name": "org.springframework.cglib.proxy.NoOp"
  },
  {
    "name": "org.springframework.cglib.reflect.FastClass"
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationStartupAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.AutoProxyRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan$Filter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMetadataReaderFactory",
        "parameterTypes": [
          "org.springframework.core.type.classreading.MetadataReaderFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.DependsOn",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportRuntimeHints",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.GenericApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "supportsEventType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.SmartApplicationListener",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getListenerId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onClose",
        "parameterTypes": []
      },
      {
        "name": "onRefresh",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.support.GenericApplicationContext",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
  },
  {
    "name": "org.springframework.core.DecoratingProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.ReactiveAdapterRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.SmartClassLoader",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.io.Resource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setFileEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocalOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setPropertiesArray",
        "parameterTypes": [
          "java.util.Properties[]"
        ]
      },
      {
        "name": "setPropertiesPersister",
        "parameterTypes": [
          "org.springframework.util.PropertiesPersister"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.type.classreading.MetadataReaderFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.annotation.Id",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.annotation.LastModifiedDate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.annotation.Version",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.auditing.AuditingHandlerSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setDateTimeForNow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDateTimeProvider",
        "parameterTypes": [
          "org.springframework.data.auditing.DateTimeProvider"
        ]
      },
      {
        "name": "setModifyOnCreation",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.auditing.DateTimeProvider",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.auditing.ReactiveAuditingHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "markCreated",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "markModified",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setAuditorAware",
        "parameterTypes": [
          "org.springframework.data.domain.ReactiveAuditorAware"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.auditing.ReactiveIsNewAwareAuditingHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.mapping.context.MappingContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.convert.CustomConversions",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCustomWriteTarget",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getCustomWriteTarget",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPropertyValueConversions",
        "parameterTypes": []
      },
      {
        "name": "getSimpleTypeHolder",
        "parameterTypes": []
      },
      {
        "name": "hasCustomReadTarget",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "hasCustomWriteTarget",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "hasCustomWriteTarget",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "hasValueConverter",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "isSimpleType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "registerConvertersIn",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.convert.EntityReader",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.EntityWriter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.ReadingConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.convert.WritingConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.AbstractPageRequest",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getPageNumber",
        "parameterTypes": []
      },
      {
        "name": "getPageSize",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Chunk",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getNumber",
        "parameterTypes": []
      },
      {
        "name": "getNumberOfElements",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "isFirst",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.ManagedTypes",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "toList",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Page",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.PageImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTotalElements",
        "parameterTypes": []
      },
      {
        "name": "getTotalPages",
        "parameterTypes": []
      },
      {
        "name": "isLast",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.PageRequest",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "getSort",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Pageable",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isPaged",
        "parameterTypes": []
      },
      {
        "name": "isUnpaged",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Slice",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getPageable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.domain.Sort",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "isSorted",
        "parameterTypes": []
      },
      {
        "name": "isUnsorted",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.PersistentProperty"
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyAccessor"
  },
  {
    "name": "org.springframework.data.mapping.callback.EntityCallback",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.mapping.context.AbstractMappingContext",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "createPersistentProperty",
        "parameterTypes": [
          "org.springframework.data.mapping.model.Property",
          "org.springframework.data.mapping.model.MutablePersistentEntity",
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "getManagedTypes",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntities",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "org.springframework.data.mapping.PropertyPath"
        ]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setInitialEntitySet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setManagedTypes",
        "parameterTypes": [
          "org.springframework.data.domain.ManagedTypes"
        ]
      },
      {
        "name": "setSimpleTypeHolder",
        "parameterTypes": [
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "setStrict",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getRequiredPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$ObjectInstantiator"
  },
  {
    "name": "org.springframework.data.querydsl.QuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.r2dbc.config.EnableR2dbcAuditing",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.config.R2dbcAuditingRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.convert.MappingR2dbcConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getArrayValue",
        "parameterTypes": [
          "org.springframework.data.relational.core.dialect.ArrayColumns",
          "org.springframework.data.relational.core.mapping.RelationalPersistentProperty",
          "java.lang.Object"
        ]
      },
      {
        "name": "getTargetType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "isSimpleType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "populateIdIfNecessary",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "io.r2dbc.spi.Row",
          "io.r2dbc.spi.RowMetadata"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.convert.R2dbcConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.convert.R2dbcCustomConversions",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.core.FluentR2dbcOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.core.R2dbcEntityOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.lang.Class",
          "java.util.function.Function"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.util.function.Function"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "getConverter",
        "parameterTypes": []
      },
      {
        "name": "getDataAccessStrategy",
        "parameterTypes": []
      },
      {
        "name": "getDatabaseClient",
        "parameterTypes": []
      },
      {
        "name": "insert",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "insert",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.lang.Class"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.lang.Class",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.r2dbc.core.PreparedOperation",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "select",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "select",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "selectOne",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "java.lang.Class"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.data.relational.core.query.Query",
          "org.springframework.data.relational.core.query.Update",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveDeleteOperation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveInsertOperation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveSelectOperation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.core.ReactiveUpdateOperation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.dialect.DialectResolver$BuiltInDialectProvider",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.R2dbcMappingContext",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.event.AfterConvertCallback",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.event.AfterSaveCallback",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.event.BeforeConvertCallback",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onBeforeConvert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.relational.core.sql.SqlIdentifier"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.event.BeforeSaveCallback",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.mapping.event.ReactiveAuditingEntityCallback",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "onBeforeConvert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.relational.core.sql.SqlIdentifier"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.repository.R2dbcRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.repository.config.EnableR2dbcRepositories",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.r2dbc.repository.support.R2dbcRepositoryFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setEntityOperations",
        "parameterTypes": [
          "org.springframework.data.r2dbc.core.R2dbcEntityOperations"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.r2dbc.repository.support.SimpleR2dbcRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.relational.repository.query.RelationalEntityInformation",
          "org.springframework.data.r2dbc.core.R2dbcEntityOperations",
          "org.springframework.data.r2dbc.convert.R2dbcConverter"
        ]
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.RelationalManagedTypes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.conversion.BasicRelationalConverter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createInstance",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentEntity",
          "java.util.function.Function"
        ]
      },
      {
        "name": "getConversionService",
        "parameterTypes": []
      },
      {
        "name": "getConversions",
        "parameterTypes": []
      },
      {
        "name": "getEntityInstantiators",
        "parameterTypes": []
      },
      {
        "name": "getMappingContext",
        "parameterTypes": []
      },
      {
        "name": "getPropertyAccessor",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentEntity",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.util.TypeInformation"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.conversion.RelationalConverter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.mapping.RelationalMappingContext",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getNamingStrategy",
        "parameterTypes": []
      },
      {
        "name": "isForceQuote",
        "parameterTypes": []
      },
      {
        "name": "setForceQuote",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.relational.core.mapping.Table",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.NoRepositoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.Repository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "processAheadOfTime",
        "parameterTypes": [
          "org.springframework.beans.factory.support.RegisteredBean"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setConfigMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.NamedQueries",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addRepositoryFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
        ]
      },
      {
        "name": "getEntityInformation",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": []
      },
      {
        "name": "getQueryMethods",
        "parameterTypes": []
      },
      {
        "name": "getRepositoryInformation",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setCustomImplementation",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setEvaluationContextProvider",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryBaseClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor"
  },
  {
    "name": "org.springframework.data.repository.query.QueryLookupStrategy$Key",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "org.springframework.data.domain.Sort"
        ]
      },
      {
        "name": "findBy",
        "parameterTypes": [
          "org.springframework.data.domain.Example",
          "java.util.function.Function"
        ]
      },
      {
        "name": "findOne",
        "parameterTypes": [
          "org.springframework.data.domain.Example"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.reactive.ReactiveCrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.reactive.ReactiveSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.Streamable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "org.springframework.data.util.Streamable"
        ]
      },
      {
        "name": "and",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "flatMap",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "stream",
        "parameterTypes": []
      },
      {
        "name": "toList",
        "parameterTypes": []
      },
      {
        "name": "toSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver"
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFormatter",
        "parameterTypes": [
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": [
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addPrinter",
        "parameterTypes": [
          "org.springframework.format.Printer"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.HttpStatusCode",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.ReactiveHttpInputMessage"
  },
  {
    "name": "org.springframework.http.ResponseEntity"
  },
  {
    "name": "org.springframework.http.ResponseEntity$BodyBuilder"
  },
  {
    "name": "org.springframework.http.client.reactive.ClientHttpConnector"
  },
  {
    "name": "org.springframework.http.client.reactive.ReactorResourceFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.ClientCodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.CodecConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.codec.ServerCodecConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
  },
  {
    "name": "org.springframework.http.codec.support.BaseCodecConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "customCodecs",
        "parameterTypes": []
      },
      {
        "name": "defaultCodecs",
        "parameterTypes": []
      },
      {
        "name": "getReaders",
        "parameterTypes": []
      },
      {
        "name": "getWriters",
        "parameterTypes": []
      },
      {
        "name": "registerDefaults",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter"
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.server.reactive.HttpHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.ConnectionCallback"
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate"
  },
  {
    "name": "org.springframework.jdbc.datasource.AbstractDataSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.AbstractDriverBasedDataSource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
  },
  {
    "name": "org.springframework.jmx.export.MBeanExportOperations",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jmx.export.MBeanExporter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addExcludedBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "registerManagedResource",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "registerManagedResource",
        "parameterTypes": [
          "java.lang.Object",
          "javax.management.ObjectName"
        ]
      },
      {
        "name": "setAllowEagerInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAssembler",
        "parameterTypes": [
          "org.springframework.jmx.export.assembler.MBeanInfoAssembler"
        ]
      },
      {
        "name": "setAutodetect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutodetectMode",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAutodetectModeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeans",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEnsureUniqueRuntimeObjectNames",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExcludedBeans",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setExposeManagedResourceClassLoader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setListeners",
        "parameterTypes": [
          "org.springframework.jmx.export.MBeanExporterListener[]"
        ]
      },
      {
        "name": "setNamingStrategy",
        "parameterTypes": [
          "org.springframework.jmx.export.naming.ObjectNamingStrategy"
        ]
      },
      {
        "name": "setNotificationListenerMappings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setNotificationListeners",
        "parameterTypes": [
          "org.springframework.jmx.export.NotificationListenerBean[]"
        ]
      },
      {
        "name": "unregisterManagedResource",
        "parameterTypes": [
          "javax.management.ObjectName"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jmx.export.annotation.AnnotationMBeanExporter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jmx.export.naming.MetadataNamingStrategy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setAttributeSource",
        "parameterTypes": [
          "org.springframework.jmx.export.metadata.JmxAttributeSource"
        ]
      },
      {
        "name": "setDefaultDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jmx.export.naming.ObjectNamingStrategy",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jmx.support.MBeanRegistrationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setRegistrationPolicy",
        "parameterTypes": [
          "org.springframework.jmx.support.RegistrationPolicy"
        ]
      },
      {
        "name": "setServer",
        "parameterTypes": [
          "javax.management.MBeanServer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.lang.NonNullApi"
  },
  {
    "name": "org.springframework.lang.Nullable"
  },
  {
    "name": "org.springframework.r2dbc.connection.R2dbcTransactionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.r2dbc.core.ConnectionAccessor",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.r2dbc.core.DatabaseClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.r2dbc.core.DefaultDatabaseClient",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getConnectionFactory",
        "parameterTypes": []
      },
      {
        "name": "inConnection",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "inConnectionMany",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "sql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "sql",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$BuiltInBindMarkersFactoryProvider",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
  },
  {
    "name": "org.springframework.stereotype.Component",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Repository",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Service",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager"
  },
  {
    "name": "org.springframework.transaction.ReactiveTransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "allPublicFields": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager"
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setImportMetadata",
        "parameterTypes": [
          "org.springframework.core.type.AnnotationMetadata"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionRuntimeHints"
  },
  {
    "name": "org.springframework.transaction.annotation.Transactional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getTransactionAttribute",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAspectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getTransactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setTransactionAttributeSource",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "setTransactionAttributeSources",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
        ]
      },
      {
        "name": "setTransactionAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "setTransactionManagerBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionalProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.reactive.AbstractReactiveTransactionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.reactive.TransactionalOperator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "transactional",
        "parameterTypes": [
          "reactor.core.publisher.Flux"
        ]
      },
      {
        "name": "transactional",
        "parameterTypes": [
          "reactor.core.publisher.Mono"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.reactive.TransactionalOperatorImpl",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.transaction.reactive.TransactionCallback"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.Assert"
  },
  {
    "name": "org.springframework.validation.DataBinder"
  },
  {
    "name": "org.springframework.validation.FieldError"
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getClockProvider",
        "parameterTypes": []
      },
      {
        "name": "getConstraintValidatorFactory",
        "parameterTypes": []
      },
      {
        "name": "getMessageInterpolator",
        "parameterTypes": []
      },
      {
        "name": "getParameterNameProvider",
        "parameterTypes": []
      },
      {
        "name": "getTraversableResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "usingContext",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setValidatedAnnotationType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "jakarta.validation.Validator"
        ]
      },
      {
        "name": "setValidatorFactory",
        "parameterTypes": [
          "jakarta.validation.ValidatorFactory"
        ]
      },
      {
        "name": "setValidatorProvider",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "forExecutables",
        "parameterTypes": []
      },
      {
        "name": "getConstraintsForClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateProperty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.bind.MethodArgumentNotValidException"
  },
  {
    "name": "org.springframework.web.bind.annotation.ControllerAdvice",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.DeleteMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ExceptionHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.GetMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PatchMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PathVariable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PostMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PutMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestParam",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestControllerAdvice",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.support.WebExchangeBindException"
  },
  {
    "name": "org.springframework.web.client.RestTemplate"
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebEnvironment"
  },
  {
    "name": "org.springframework.web.context.WebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.support.GenericWebApplicationContext"
  },
  {
    "name": "org.springframework.web.cors.reactive.PreFlightRequestHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter"
  },
  {
    "name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.DispatchExceptionHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "handlePreFlight",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.HandlerAdapter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerMapping",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerResult"
  },
  {
    "name": "org.springframework.web.reactive.HandlerResultHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.accept.RequestedContentTypeResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configurePathMatching",
        "parameterTypes": [
          "org.springframework.web.reactive.config.PathMatchConfigurer"
        ]
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "responseBodyResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseEntityResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseStatusExceptionHandler",
        "parameterTypes": []
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "serverCodecConfigurer",
        "parameterTypes": []
      },
      {
        "name": "serverResponseResultHandler",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "simpleHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "viewResolutionResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "webFluxAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "webFluxContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxWebSocketHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "webHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.reactive.config.CorsRegistry"
        ]
      },
      {
        "name": "configureContentTypeResolver",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
        ]
      },
      {
        "name": "configurePathMatching",
        "parameterTypes": [
          "org.springframework.web.reactive.config.PathMatchConfigurer"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getWebSocketService",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.client.WebClient"
  },
  {
    "name": "org.springframework.web.reactive.function.client.WebClient$Builder"
  },
  {
    "name": "org.springframework.web.reactive.function.server.HandlerFunction",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.ServerRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.AbstractHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCorsProcessor",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getPathPatternParser",
        "parameterTypes": []
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.reactive.CorsConfigurationSource"
        ]
      },
      {
        "name": "setCorsConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCorsProcessor",
        "parameterTypes": [
          "org.springframework.web.cors.reactive.CorsProcessor"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUseCaseSensitiveMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHandlerInternal",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setHandlerPredicate",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "setLazyInitHandlers",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.resource.ResourceUrlProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.HandlerResultHandlerSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "getContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.SimpleHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDirectPaths",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.web.method.HandlerMethod",
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "unregisterMapping",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHandlerInternal",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMessageWriters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ModelAttributeMethodArgumentResolver"
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "handleError",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handleResult",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.web.reactive.HandlerResult"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "org.springframework.web.reactive.HandlerResult"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Object"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.WebExceptionHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.WebHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.adapter.HttpWebHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.http.server.reactive.ServerHttpRequest",
          "org.springframework.http.server.reactive.ServerHttpResponse"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.handler.ResponseStatusExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setWarnLogCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.handler.WebHandlerDecorator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDelegate",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "resolveLocaleContext",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setLocaleContext",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "org.springframework.context.i18n.LocaleContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.i18n.LocaleContextResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.session.CookieWebSessionIdResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "expireSession",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "resolveSessionIds",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.session.DefaultWebSessionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getSession",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.session.WebSessionIdResolver",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.session.WebSessionManager",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.yaml.snakeyaml.Yaml"
  },
  {
    "name": "reactor.core.Disposable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "dispose",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Flux"
  },
  {
    "name": "reactor.core.publisher.FluxConcatMap$ConcatMapInner"
  },
  {
    "name": "reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber"
  },
  {
    "name": "reactor.core.publisher.FluxFlatMap"
  },
  {
    "name": "reactor.core.publisher.FluxIterable"
  },
  {
    "name": "reactor.core.publisher.FluxMap$MapSubscriber"
  },
  {
    "name": "reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber"
  },
  {
    "name": "reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber"
  },
  {
    "name": "reactor.core.publisher.FluxPeek$PeekSubscriber"
  },
  {
    "name": "reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber"
  },
  {
    "name": "reactor.core.publisher.InternalMonoOperator"
  },
  {
    "name": "reactor.core.publisher.Mono"
  },
  {
    "name": "reactor.core.publisher.MonoCacheTime"
  },
  {
    "name": "reactor.core.publisher.MonoDefer"
  },
  {
    "name": "reactor.core.publisher.MonoDeferContextual"
  },
  {
    "name": "reactor.core.publisher.MonoFlatMap"
  },
  {
    "name": "reactor.core.publisher.MonoFlatMap$FlatMapMain"
  },
  {
    "name": "reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber"
  },
  {
    "name": "reactor.core.publisher.MonoIgnoreThen"
  },
  {
    "name": "reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain"
  },
  {
    "name": "reactor.core.publisher.MonoNext$NextSubscriber"
  },
  {
    "name": "reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber"
  },
  {
    "name": "reactor.core.publisher.MonoZip"
  },
  {
    "name": "reactor.core.publisher.MonoZip$ZipCoordinator"
  },
  {
    "name": "reactor.core.publisher.MonoZip$ZipInner"
  },
  {
    "name": "reactor.core.publisher.Operators"
  },
  {
    "name": "reactor.core.publisher.Operators$MonoSubscriber"
  },
  {
    "name": "reactor.core.publisher.Operators$MultiSubscriptionSubscriber"
  },
  {
    "name": "reactor.core.publisher.Operators$ScalarSubscription"
  },
  {
    "name": "reactor.netty.ReactorNetty$CompositeConnectionObserver"
  },
  {
    "name": "reactor.netty.channel.ChannelOperationsHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.http.client.HttpClient"
  },
  {
    "name": "reactor.netty.http.server.HttpServer"
  },
  {
    "name": "reactor.netty.http.server.HttpServer$HttpServerHandle"
  },
  {
    "name": "reactor.netty.http.server.HttpServerOperations"
  },
  {
    "name": "reactor.netty.http.server.HttpServerResponse"
  },
  {
    "name": "reactor.netty.http.server.HttpTrafficHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.transport.ServerTransport$Acceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.transport.ServerTransport$AcceptorInitializer"
  },
  {
    "name": "reactor.netty.transport.ServerTransport$ChildObserver"
  },
  {
    "name": "reactor.netty.transport.TransportConfig$TransportChannelInitializer"
  },
  {
    "name": "reactor.util.annotation.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "reactor.util.function.Tuple2"
  },
  {
    "name": "reactor.util.retry.Retry"
  },
  {
    "name": "reactor.util.retry.RetryBackoffSpec"
  },
  {
    "name": "sun.management.ClassLoadingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.CompilationImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$1",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryManagerImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.MemoryPoolImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.management.RuntimeImpl",
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ],
    "methods": [
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndAddLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeCleaner",
        "parameterTypes": [
          "java.nio.ByteBuffer"
        ]
      },
      {
        "name": "storeFence",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [
      {
        "name": "publicSelectedKeys"
      },
      {
        "name": "selectedKeys"
      }
    ]
  },
  {
    "name": "sun.reflect.ReflectionFactory",
    "methods": [
      {
        "name": "getReflectionFactory",
        "parameterTypes": []
      },
      {
        "name": "newConstructorForSerialization",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.reflect.Constructor"
        ]
      }
    ]
  },
  {
    "name": "sun.rmi.registry.RegistryImpl_Stub"
  },
  {
    "name": "sun.rmi.transport.DGCImpl_Skel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.rmi.transport.DGCImpl_Stub",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.rmi.server.RemoteRef"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.MD5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  }
]
